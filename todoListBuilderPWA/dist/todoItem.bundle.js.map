{"version":3,"sources":["webpack:///webpack/bootstrap 3541dbd81119c23d83ac","webpack:///./src/todolist_item.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,cAAc;AACxG;AACA;AACA;AACA,wDAAwD,UAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,kBAAkB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"todoItem.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3541dbd81119c23d83ac","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ToDoListItem {\n    constructor(parentNode, item) {\n        this.isComplete = false;\n        Object.assign(this, item);\n        this.parentNode = parentNode;\n        this.node = null;\n        this.initMarkup(item);\n        this.initEvents();\n    }\n    initMarkup(item) {\n        let itemNode = document.createElement(\"li\");\n        itemNode.classList.add(\"item-wrap\");\n        let checkedStatus = \"\";\n        if (item.isComplete) {\n            itemNode.classList.add(\"item-complete\");\n            checkedStatus = \"checked\";\n        }\n        itemNode.innerHTML = `\n      <div role=\"checkbox\" class=\"icon-button colored-icon-button checkbox js-complete\" ${checkedStatus}>\n        <i class=\"material-icons material-spec-icon done\" title=\"Check it done\">check_box</i>\n        <i class=\"material-icons material-spec-icon in-progress\" title=\"Check it done\">check_box_outline_blank</i>\n      </div>\n      <input class=\"item-text-field js-update\" value=\"${item.name}\" readonly>\n      <button class=\"icon-button colored-icon-button js-remove\">\n        <i class=\"material-icons material-spec-icon\" title=\"Remove item\">clear</i>\n      </button>`;\n        itemNode.dataset.id = item.id;\n        this.parentNode.appendChild(itemNode);\n        this.node = itemNode;\n        this.inputNode = itemNode.querySelector(\".js-update\");\n    }\n    initEvents() {\n        this.node.querySelector(\".js-complete\").addEventListener(\"click\", this.toggleCompleteEvent.bind(this));\n        this.node.querySelector(\".js-remove\").addEventListener(\"click\", this.removeEvent.bind(this));\n        this.inputNode.addEventListener(\"click\", (ev) => {\n            if (this.isComplete)\n                return;\n            ev.currentTarget.readOnly = false;\n        });\n        this.inputNode.addEventListener(\"change\", this.updateEvent.bind(this));\n        this.inputNode.addEventListener(\"keydown\", (ev) => {\n            this.node.classList.remove(\"error\");\n            if (ev.keyCode == 27) {\n                ev.target.value = this.name;\n                this.inputNode.blur();\n                return;\n            }\n            if (ev.keyCode == 13) {\n                if (ev.target.value.length == 0) {\n                    ev.preventDefault();\n                    this.node.classList.add(\"error\");\n                    return;\n                }\n            }\n        });\n        this.inputNode.addEventListener(\"blur\", (ev) => {\n            ev.currentTarget.readOnly = true;\n        });\n        this.inputNode.addEventListener(\"keypress\", (ev) => {\n            this.node.classList.remove(\"error\");\n        });\n    }\n    sendUpdateStatus() {\n        this.parentNode.dispatchEvent(new CustomEvent(\"todos.itemWasUpdated\"));\n    }\n    getData() {\n        return {\n            id: this.id,\n            name: this.name,\n            isComplete: this.isComplete\n        };\n    }\n    removeEvent() {\n        this.node.remove();\n        this.parentNode.dispatchEvent(new CustomEvent(\"todos.removeTask\", { detail: this.id }));\n    }\n    toggleCompleteEvent() {\n        if (this.isComplete) {\n            this.node.classList.remove(\"item-complete\");\n        }\n        else {\n            this.node.classList.add(\"item-complete\");\n        }\n        this.isComplete = !this.isComplete;\n        this.sendUpdateStatus();\n    }\n    updateEvent(ev) {\n        if (ev.target.value.length == 0) {\n            ev.preventDefault();\n            this.node.classList.add(\"error\");\n            return;\n        }\n        ev.target.readOnly = true;\n        this.name = ev.target.value;\n        this.sendUpdateStatus();\n    }\n}\nexports.default = ToDoListItem;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/todolist_item.ts\n// module id = 0\n// module chunks = 0 1"],"sourceRoot":""}