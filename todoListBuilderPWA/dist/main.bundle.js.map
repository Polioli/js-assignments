{"version":3,"sources":["webpack:///webpack/bootstrap 3541dbd81119c23d83ac","webpack:///./src/todolist_item.ts","webpack:///./src/main.ts","webpack:///./src/todobuilder.ts","webpack:///./src/todolist.ts","webpack:///./src/errors.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,cAAc;AACxG;AACA;AACA;AACA,wDAAwD,UAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,kBAAkB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;;;;;;;AC5CD;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kBAAkB;AAC5C,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+EAA+E,gBAAgB;AAC/F;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,2BAA2B,yBAAyB;AACpD,mFAAmF,kBAAkB;AACrG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,iCAAiC;AACjC;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,iFAAiF,kBAAkB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+BAAmC,EAAE;AACjF;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;ACrLA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3541dbd81119c23d83ac","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ToDoListItem {\n    constructor(parentNode, item) {\n        this.isComplete = false;\n        Object.assign(this, item);\n        this.parentNode = parentNode;\n        this.node = null;\n        this.initMarkup(item);\n        this.initEvents();\n    }\n    initMarkup(item) {\n        let itemNode = document.createElement(\"li\");\n        itemNode.classList.add(\"item-wrap\");\n        let checkedStatus = \"\";\n        if (item.isComplete) {\n            itemNode.classList.add(\"item-complete\");\n            checkedStatus = \"checked\";\n        }\n        itemNode.innerHTML = `\n      <div role=\"checkbox\" class=\"icon-button colored-icon-button checkbox js-complete\" ${checkedStatus}>\n        <i class=\"material-icons material-spec-icon done\" title=\"Check it done\">check_box</i>\n        <i class=\"material-icons material-spec-icon in-progress\" title=\"Check it done\">check_box_outline_blank</i>\n      </div>\n      <input class=\"item-text-field js-update\" value=\"${item.name}\" readonly>\n      <button class=\"icon-button colored-icon-button js-remove\">\n        <i class=\"material-icons material-spec-icon\" title=\"Remove item\">clear</i>\n      </button>`;\n        itemNode.dataset.id = item.id;\n        this.parentNode.appendChild(itemNode);\n        this.node = itemNode;\n        this.inputNode = itemNode.querySelector(\".js-update\");\n    }\n    initEvents() {\n        this.node.querySelector(\".js-complete\").addEventListener(\"click\", this.toggleCompleteEvent.bind(this));\n        this.node.querySelector(\".js-remove\").addEventListener(\"click\", this.removeEvent.bind(this));\n        this.inputNode.addEventListener(\"click\", (ev) => {\n            if (this.isComplete)\n                return;\n            ev.currentTarget.readOnly = false;\n        });\n        this.inputNode.addEventListener(\"change\", this.updateEvent.bind(this));\n        this.inputNode.addEventListener(\"keydown\", (ev) => {\n            this.node.classList.remove(\"error\");\n            if (ev.keyCode == 27) {\n                ev.target.value = this.name;\n                this.inputNode.blur();\n                return;\n            }\n            if (ev.keyCode == 13) {\n                if (ev.target.value.length == 0) {\n                    ev.preventDefault();\n                    this.node.classList.add(\"error\");\n                    return;\n                }\n            }\n        });\n        this.inputNode.addEventListener(\"blur\", (ev) => {\n            ev.currentTarget.readOnly = true;\n        });\n        this.inputNode.addEventListener(\"keypress\", (ev) => {\n            this.node.classList.remove(\"error\");\n        });\n    }\n    sendUpdateStatus() {\n        this.parentNode.dispatchEvent(new CustomEvent(\"todos.itemWasUpdated\"));\n    }\n    getData() {\n        return {\n            id: this.id,\n            name: this.name,\n            isComplete: this.isComplete\n        };\n    }\n    removeEvent() {\n        this.node.remove();\n        this.parentNode.dispatchEvent(new CustomEvent(\"todos.removeTask\", { detail: this.id }));\n    }\n    toggleCompleteEvent() {\n        if (this.isComplete) {\n            this.node.classList.remove(\"item-complete\");\n        }\n        else {\n            this.node.classList.add(\"item-complete\");\n        }\n        this.isComplete = !this.isComplete;\n        this.sendUpdateStatus();\n    }\n    updateEvent(ev) {\n        if (ev.target.value.length == 0) {\n            ev.preventDefault();\n            this.node.classList.add(\"error\");\n            return;\n        }\n        ev.target.readOnly = true;\n        this.name = ev.target.value;\n        this.sendUpdateStatus();\n    }\n}\nexports.default = ToDoListItem;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/todolist_item.ts\n// module id = 0\n// module chunks = 0 1","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst todobuilder_1 = require(\"./todobuilder\");\nconst errors_1 = require(\"./errors\");\nlet todoBuilder = new todobuilder_1.default(\".js-todo-builder\");\nlet errorsPanel = document.querySelector(\".js-errors-panel\");\nlet appMenu = document.querySelector(\".js-app-menu\");\nlet aboutBox = document.querySelector(\".js-description\");\nif (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.register(\"/js-assignments/todoListBuilderPWA/sw.js\")\n        .then((registration) => {\n        errors_1.default(\"SW ToDoList registration was done!\", registration);\n        return navigator.serviceWorker.ready;\n    }).catch((err) => {\n        errors_1.default(\"SW register error: \", err);\n    });\n    navigator.serviceWorker.addEventListener(\"message\", (ev) => {\n        errors_1.default(\"From SW: \", ev.data);\n    });\n}\nelse {\n    errors_1.default(\"The browser doesn't support ServiceWorker\", \"\");\n}\ndocument.querySelector(\".js-app-menu-button\").addEventListener(\"click\", (ev) => {\n    appMenu.classList.toggle(\"visible\");\n});\ndocument.querySelector(\".js-app-menu-item\").addEventListener(\"click\", (ev) => {\n    errorsPanel.classList.toggle(\"visible\");\n    appMenu.classList.toggle(\"visible\");\n    let target = ev.currentTarget;\n    if (target.dataset.textStatus == \"show\") {\n        target.dataset.textStatus = \"hide\";\n        target.innerHTML = target.dataset.textHide;\n    }\n    else {\n        target.dataset.textStatus = \"show\";\n        target.innerHTML = target.dataset.textShow;\n    }\n});\ndocument.querySelector(\".js-toggle-about\").addEventListener(\"click\", (ev) => {\n    aboutBox.classList.toggle(\"visible\");\n});\ndocument.querySelector(\".js-description-close\").addEventListener(\"click\", (ev) => {\n    aboutBox.classList.toggle(\"visible\");\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst todolist_1 = require(\"./todolist\");\nclass ToDoBuilder {\n    constructor(selector) {\n        this.parentNode = document.querySelector(selector);\n        this.initialize();\n    }\n    initialize() {\n        this.initializeDOM();\n        this.initializeEvents();\n        this.initializeData();\n    }\n    initializeDOM() {\n        this.parentNode.innerHTML = '\\\n      <button class=\"fab js-add-todolist\">\\\n        <i class=\"material-icons material-spec-icon\" title=\"Add Item\">add</i>\\\n      </button>\\\n      <div class=\"todos-box js-todo-box\"></div>';\n        this.addButtonNode = this.parentNode.querySelector(\".js-add-todolist\");\n        this.todosBoxNode = this.parentNode.querySelector(\".js-todo-box\");\n    }\n    initializeEvents() {\n        this.addButtonNode.addEventListener(\"click\", this.addList.bind(this));\n        this.todosBoxNode.addEventListener(\"todos.removeListId\", this.removeListId.bind(this));\n        this.todosBoxNode.addEventListener(\"todos.saveListId\", this.saveListId.bind(this));\n    }\n    initializeData() {\n        let todosData = this.getDataFromStorage();\n        if (!!todosData && todosData.length) {\n            todosData.forEach((listId) => {\n                this.createTodoList({ id: listId });\n            });\n        }\n        else {\n            this.createTodoList(null);\n        }\n    }\n    getDataFromStorage() {\n        let todosData;\n        try {\n            todosData = JSON.parse(localStorage.getItem(\"todoLists\")) || [];\n        }\n        catch (e) {\n            alert(\"An error occured while saving the list\");\n            todosData = null;\n        }\n        return todosData;\n    }\n    setDataToStorage(todosData) {\n        if (todosData.length)\n            localStorage.setItem(\"todoLists\", JSON.stringify(todosData));\n        else\n            localStorage.removeItem(\"todoLists\");\n    }\n    createTodoList(data) {\n        new todolist_1.default(this.todosBoxNode, data);\n    }\n    addList() {\n        this.createTodoList(null);\n    }\n    saveListId(ev) {\n        let todosData = this.getDataFromStorage();\n        if (!todosData)\n            return;\n        todosData.push(ev.detail);\n        this.setDataToStorage(todosData);\n    }\n    removeListId(ev) {\n        let todosData = this.getDataFromStorage();\n        let index = todosData.indexOf(ev.detail);\n        if (index > -1) {\n            todosData.splice(index, 1);\n            this.setDataToStorage(todosData);\n        }\n    }\n}\nexports.default = ToDoBuilder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/todobuilder.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ToDoList {\n    constructor(builderNode, data) {\n        this.todosBoxNode = builderNode;\n        this.initMarkup();\n        this.initEvents();\n        this.id = (data && data.id) || new Date().getTime();\n        this.items = [];\n        this.name = \"\";\n        if (!!data) {\n            this.initData();\n        }\n        else {\n            this.saveList({ isNew: true });\n        }\n    }\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this.nameNode.innerHTML = this.formatName();\n    }\n    initData() {\n        let data = this.getListFromStorage();\n        Object.assign(this, { name: data.name });\n        data.items.map((item) => {\n            this.addItem(item);\n        });\n    }\n    initMarkup() {\n        let template = `\n      <div class=\"todo-wrap\">\n        <div class=\"todo-name-wrap\">\n          <div class=\"todo-name js-assign-name\" contenteditable></div>\n          <button class=\"icon-button js-list-menu-button\">\n            <i class=\"material-icons material-spec-icon\" title=\"Show menu\">more_vert</i>\n          </button>\n        </div>\n        <div class=\"list-menu js-list-menu\">\n          <ul>\n            <li class=\"item js-clear-list\">Clear list</li>\n            <li class=\"item js-remove-list\">Remove list</li>\n          </ul>\n        </div>\n        <form class=\"item-wrap add-item js-add-item\">\n          <input type=\"text\" name=\"add-item\" class=\"item-text-field\" placeholder=\"Add name\" />\n          <button type=\"submit\" class=\"icon-button colored-icon-button\">\n            <i class=\"material-icons material-spec-icon\" title=\"Add item\">add_circle</i>\n          </button>\n        </form>\n        <ul class=\"todo-list js-list\"></ul>\n      </div>`;\n        this.parentNode = document.createElement(\"div\");\n        this.parentNode.innerHTML = template;\n        this.parentNode.classList.add(\"todo-grid-item\");\n        this.inputNode = this.parentNode.querySelector(\".js-add-item\");\n        this.listNode = this.parentNode.querySelector(\".js-list\");\n        this.nameNode = this.parentNode.querySelector(\".js-assign-name\");\n        this.menuNode = this.parentNode.querySelector(\".js-list-menu-button\");\n        this.listMenuNode = this.parentNode.querySelector(\".js-list-menu\");\n        this.todosBoxNode.append(this.parentNode);\n    }\n    initEvents() {\n        let findItem = (list, id) => {\n            return list.findIndex((item) => {\n                return item.id == id;\n            });\n        };\n        this.parentNode.addEventListener(\"todos.createTask\", (ev) => {\n            if (ev.detail.length == 0) {\n                this.inputNode.classList.add(\"error\");\n                return;\n            }\n            this.addItem({ name: ev.detail });\n        });\n        this.parentNode.addEventListener(\"todos.removeTask\", (ev) => {\n            let index = findItem(this.items, ev.detail);\n            this.items.splice(index, 1);\n            this.saveList(null);\n        }, true);\n        this.parentNode.addEventListener(\"todos.itemWasUpdated\", (ev) => {\n            this.saveList(null);\n        }, true);\n        this.inputNode.addEventListener(\"keypress\", (ev) => {\n            this.inputNode.classList.remove(\"error\");\n        });\n        this.inputNode.addEventListener(\"submit\", (ev) => {\n            ev.preventDefault();\n            let elements = ev.target.elements;\n            let value = elements[\"add-item\"].value;\n            this.parentNode.dispatchEvent(new CustomEvent(\"todos.createTask\", { detail: value }));\n            this.inputNode.reset();\n        });\n        this.parentNode.querySelector(\".js-clear-list\").addEventListener(\"click\", (ev) => {\n            this.clearAll(null);\n            this.listMenuNode.classList.toggle(\"visible\");\n        });\n        this.nameNode.addEventListener(\"blur\", (ev) => {\n            if (ev.target.innerHTML != this.formatName()) {\n                this.name = ev.target.innerHTML;\n                this.saveList(null);\n            }\n            ev.target.innerHTML = this.formatName();\n        });\n        this.nameNode.addEventListener(\"keydown\", (ev) => {\n            if (ev.keyCode == 27) {\n                ev.target.innerHTML = this.formatName();\n                ev.target.blur();\n            }\n            if (ev.keyCode == 13) {\n                ev.preventDefault();\n                ev.target.blur();\n            }\n        });\n        this.menuNode.addEventListener(\"click\", (ev) => {\n            this.listMenuNode.classList.toggle(\"visible\");\n        });\n        this.parentNode.querySelector(\".js-remove-list\").addEventListener(\"click\", (ev) => {\n            this.clearAll({ removeWithParent: true });\n            this.todosBoxNode.dispatchEvent(new CustomEvent(\"todos.removeListId\", { detail: this.id }));\n            this.listMenuNode.classList.toggle(\"visible\");\n        });\n    }\n    formatName() {\n        return this.name || \"[Assign the list name]\";\n    }\n    getListFromStorage() {\n        let todoData;\n        try {\n            todoData = JSON.parse(localStorage.getItem(`todoList_${this.id}`));\n        }\n        catch (e) {\n        }\n        finally {\n            todoData = todoData || {};\n        }\n        return todoData;\n    }\n    removeFromStorage() {\n        localStorage.removeItem(`todoList_${this.id}`);\n    }\n    saveList(options) {\n        let todoData = this.getListFromStorage();\n        Object.assign(todoData, { id: this.id, name: this.name, items: this.items.map((item) => {\n                return item.getData();\n            }) });\n        let dataToSave;\n        try {\n            dataToSave = JSON.stringify(todoData);\n        }\n        catch (e) {\n            alert(\"An error was accured by saving data\");\n            return;\n        }\n        localStorage.setItem(`todoList_${this.id}`, dataToSave);\n        if (options && options.isNew) {\n            this.todosBoxNode.dispatchEvent(new CustomEvent(\"todos.saveListId\", { detail: this.id }));\n        }\n    }\n    clearAll(options) {\n        this.items.length = 0;\n        this.listNode.innerHTML = \"\";\n        if (options && options.removeWithParent) {\n            this.parentNode.remove();\n            this.removeFromStorage();\n        }\n        else {\n            this.saveList(null);\n        }\n    }\n    addItem(item) {\n        if (typeof item.id == \"undefined\")\n            item.id = new Date().getTime();\n        Promise.resolve().then(function () { return require(\"./todolist_item\"); }).then(module => module.default).then((ToDoListItem) => {\n            this.items.push(new ToDoListItem(this.listNode, item));\n            this.saveList(null);\n        });\n    }\n}\nexports.default = ToDoList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/todolist.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet errorsPanel = document.querySelector(\".js-errors-panel\");\nlet addError = (message, toConsole) => {\n    let text = message + (toConsole || \"\");\n    errorsPanel.appendChild(document.createTextNode(`${text}`));\n    errorsPanel.appendChild(document.createElement(\"br\"));\n    console.log(text);\n};\nexports.default = addError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/errors.ts\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}